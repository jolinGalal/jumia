// Code generated by goa v3.5.3, DO NOT EDIT.
//
// jumia HTTP client CLI support package
//
// Command:
// $ goa gen github.com/jolinGalal/jumia/internal/customer/design

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	customersc "github.com/jolinGalal/jumia/internal/customer/gen/http/customers/client"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `customers list
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` customers list --country "mozambique" --state "NotValid" --sort-direction "desc" --sort-key "CustomerID" --page-number 1025368078463933441 --page-size 6165802978687595755` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (goa.Endpoint, interface{}, error) {
	var (
		customersFlags = flag.NewFlagSet("customers", flag.ContinueOnError)

		customersListFlags             = flag.NewFlagSet("list", flag.ExitOnError)
		customersListCountryFlag       = customersListFlags.String("country", "all", "")
		customersListStateFlag         = customersListFlags.String("state", "all", "")
		customersListSortDirectionFlag = customersListFlags.String("sort-direction", "desc", "")
		customersListSortKeyFlag       = customersListFlags.String("sort-key", "CustomerID", "")
		customersListPageNumberFlag    = customersListFlags.String("page-number", "1", "")
		customersListPageSizeFlag      = customersListFlags.String("page-size", "20", "")
	)
	customersFlags.Usage = customersUsage
	customersListFlags.Usage = customersListUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "customers":
			svcf = customersFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "customers":
			switch epn {
			case "list":
				epf = customersListFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint goa.Endpoint
		err      error
	)
	{
		switch svcn {
		case "customers":
			c := customersc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "list":
				endpoint = c.List()
				data, err = customersc.BuildListPayload(*customersListCountryFlag, *customersListStateFlag, *customersListSortDirectionFlag, *customersListSortKeyFlag, *customersListPageNumberFlag, *customersListPageSizeFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// customersUsage displays the usage of the customers command and its
// subcommands.
func customersUsage() {
	fmt.Fprintf(os.Stderr, `The customer service exposes endpoints.
Usage:
    %[1]s [globalflags] customers COMMAND [flags]

COMMAND:
    list: list customers

Additional help:
    %[1]s customers COMMAND --help
`, os.Args[0])
}
func customersListUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] customers list -country STRING -state STRING -sort-direction STRING -sort-key STRING -page-number INT -page-size INT

list customers
    -country STRING: 
    -state STRING: 
    -sort-direction STRING: 
    -sort-key STRING: 
    -page-number INT: 
    -page-size INT: 

Example:
    %[1]s customers list --country "mozambique" --state "NotValid" --sort-direction "desc" --sort-key "CustomerID" --page-number 1025368078463933441 --page-size 6165802978687595755
`, os.Args[0])
}
